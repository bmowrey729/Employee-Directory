{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["FetchRandomser","state","loading","people","a","fetch","response","json","data","this","setState","results","console","log","length","map","person","src","picture","medium","name","title","first","last","email","cell","login","uuid","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEqBA,E,4MAEjBC,MAAO,CACLC,SAAS,EACTC,OAAQ,I,8FAGV,8BAAAC,EAAA,4DACc,uCADd,SAEyBC,MADX,wCADd,cAEQC,EAFR,gBAIqBA,EAASC,OAJ9B,OAIQC,EAJR,OAKEC,KAAKC,SAAS,CAACP,OAAQK,EAAKG,QAAST,SAAS,IAC9CU,QAAQC,IAAIL,EAAKG,QAAQ,IAN3B,gD,0EAUF,WACE,OAAIF,KAAKR,MAAMC,QACN,6CAEJO,KAAKR,MAAME,OAAOW,OAIlB,8BACE,+BACCL,KAAKR,MAAME,OAAOY,KAAI,SAAAC,GAAM,OAC3B,+BACF,qBAAKC,IAAKD,EAAOE,QAAQC,SADvB,IACmCH,EAAOI,KAAKC,MAD/C,KACwDL,EAAOI,KAAKE,MADpE,IAC4EN,EAAOI,KAAKG,KADxF,cACyGP,EAAOQ,MADhH,aACiIR,EAAOS,OAD/HT,EAAOU,MAAMC,SAFxB,SAJE,+D,GAtB+BC,IAAMC,WCUnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.045255cb.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class FetchRandomser extends React.Component {\n\n    state ={\n      loading: true,\n      people: []\n    };\n\n    async componentDidMount() {\n      const url = \"http://api.randomuser.me/?results=20\";\n      const response = await fetch(url)\n    \n      const data = await response.json();\n      this.setState({people: data.results, loading: false});\n      console.log(data.results[0]);\n\n    }\n\n  render(){\n    if (this.state.loading){\n      return <div>Loading...</div>;\n    }\n    if (!this.state.people.length) {\n      return <div>Didn't get any personnel</div>\n    }\n    return (\n         <div>\n           <ul>\n           {this.state.people.map(person => (             \n             <li key={person.login.uuid}>\n           <img src={person.picture.medium} /> {person.name.title}  {person.name.first} {person.name.last}    email: {person.email}    Cell: {person.cell}\n            </li>\n           ))};\n           </ul>\n          </div>           \n         );     \n  }\n}\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}